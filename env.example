# SERVER CONFIGURATION
PORT=8080
ENVIRONMENT=development

# Docker PostgreSQL password (for docker-compose) DB, User, Password
POSTGRES_DB=carjai
POSTGRES_USER=carjai_user
POSTGRES_PASSWORD=your_very_cool_db_password
# test: ["CMD-SHELL", "pg_isready -U carjai_user -d carjai"]
# Must match with -U (user) and -d (db)

DB_NAME=carjai
DB_PASSWORD=your_very_cool_db_password
DB_USER=carjai_user

# PostgreSQL connection settings
DB_HOST=database # Must match the compose file
DB_PORT=5432
DB_SSLMODE=disable

# User JWT configuration
USER_JWT_SECRET=your_user_jwt_secret_key_at_least_32_characters_long
USER_JWT_EXPIRATION_HOURS=24
USER_JWT_ISSUER=carjai-app

# Admin JWT configuration
ADMIN_JWT_SECRET=your_admin_jwt_secret_key_at_least_32_characters_long
ADMIN_JWT_EXPIRATION_HOURS=2
ADMIN_JWT_ISSUER=carjai-admin

# Admin account credentials
ADMIN_USERNAME=your_admin_username
ADMIN_PASSWORD=your_secure_admin_password_here
ADMIN_NAME=Your Name
ADMIN_ROUTE_PREFIX=/admin

# IP whitelist for admin access (comma-separated)
ADMIN_IP_WHITELIST=127.0.0.1/32,::1/128,172.18.0.0/16,172.19.0.0/16,192.168.0.0/16

# CORS CONFIGURATION
# Allowed origins for cross-origin requests (comma-separated)
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# AI GEN API (used for OCR)
AIGEN_API_KEY=your_aigen_api_key_hereour

# Frontend API URL (used for internal communication)
NEXT_PUBLIC_API_URL=
BACKEND_URL=http://localhost:8080
NODE_ENV=development
