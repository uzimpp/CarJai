# Build stage
FROM golang:1.24.3-alpine AS builder

# Install git and ca-certificates (needed for go mod download)
RUN apk add --no-cache git ca-certificates

WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the application
# Ensure build command is correct for your project structure
RUN CGO_ENABLED=0 GOOS=linux go build -mod=mod -a -installsuffix cgo -o main .

# Final stage
FROM alpine:latest

# Install ca-certificates for HTTPS requests
# Also install poppler-utils for pdftotext command
RUN apk update && \
    apk add --no-cache ca-certificates poppler-utils && \
    rm -rf /var/cache/apk/*

WORKDIR /app/ # Changed WORKDIR to /app for consistency

# Note: chromium and chromedriver seem unrelated to the Go backend PDF extraction.
# If they are not needed by the Go app, consider removing them to reduce image size.
# RUN apk update && apk add --no-cache chromium chromium-chromedriver

# Copy the binary from builder stage
COPY --from=builder /app/main .

# Expose port (adjust as needed)
EXPOSE 8080

# Run the application
CMD ["./main"]
