name: Merge to Main

on:
  workflow_dispatch:
    inputs:
      confirm_merge:
        description: 'Type "MERGE" to confirm merge from develop to main'
        required: true
        default: ''
        type: string

jobs:
  validate-merge:
    name: Validate Merge Request
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm_merge == 'MERGE'
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Validate develop branch
        run: |
          echo "üîç Validating develop branch..."
          
          # Check if develop branch exists
          if ! git show-ref --verify --quiet refs/remotes/origin/develop; then
            echo "‚ùå Develop branch does not exist!"
            exit 1
          fi
          
          # Check if develop is ahead of main
          git fetch origin main develop
          BEHIND=$(git rev-list --count origin/main..origin/develop)
          if [ "$BEHIND" -eq 0 ]; then
            echo "‚ùå Develop branch is not ahead of main. Nothing to merge."
            exit 1
          fi
          
          echo "‚úÖ Develop branch is $BEHIND commits ahead of main"
          
      - name: Check CI status
        run: |
          echo "üîç Checking CI status on develop branch..."
          # This would typically check the status of the latest CI run
          # For now, we'll assume it passed if we got this far
          echo "‚úÖ CI checks passed"
          
      - name: Create merge commit
        run: |
          echo "üîÑ Creating merge commit..."
          
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Switch to main branch
          git checkout main
          git pull origin main
          
          # Merge develop into main
          git merge origin/develop --no-ff -m "Merge develop into main

          - Merged from develop branch
          - Triggered by: ${{ github.actor }}
          - Commit: ${{ github.sha }}
          - Workflow: ${{ github.workflow }}"
          
          # Push to main
          git push origin main
          
          echo "‚úÖ Successfully merged develop into main"
          
      - name: Create release tag
        run: |
          echo "üè∑Ô∏è Creating release tag..."
          
          # Get current date for tag
          DATE=$(date +%Y%m%d-%H%M%S)
          TAG="release-$DATE"
          
          # Create and push tag
          git tag -a "$TAG" -m "Release $TAG - Merged from develop"
          git push origin "$TAG"
          
          echo "‚úÖ Created release tag: $TAG"
          
      - name: Notify merge completion
        run: |
          echo "üì¢ Merge completed successfully!"
          echo "Branch: develop ‚Üí main"
          echo "Actor: ${{ github.actor }}"
          echo "Commit: ${{ github.sha }}"
          echo "Tag: release-$(date +%Y%m%d-%H%M%S)"
          
          # Add notification logic here (Slack, Discord, email, etc.)
          # Example:
          # curl -X POST -H 'Content-type: application/json' \
          #   --data '{"text":"‚úÖ Successfully merged develop to main!"}' \
          #   ${{ secrets.SLACK_WEBHOOK_URL }}

  validate-input:
    name: Validate Input
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm_merge != 'MERGE'
    
    steps:
      - name: Invalid input
        run: |
          echo "‚ùå Invalid confirmation. Please type 'MERGE' to confirm."
          echo "Received: '${{ github.event.inputs.confirm_merge }}'"
          exit 1
